{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/yauheni/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/n/quiz_carrent/src/Components/Quiz/QuizMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport QuestionTitle from \"./QuestionTitle/QuestionTitle\";\nimport Answer from \"./Answer/Answer\";\nimport NextQuestion from \"./ButtonContainer/ButtonContainer\";\nimport Header from \"./Header/Header\";\nimport StatusBar from \"./StatusBar/StatusBar\";\nimport HeaderTitle from \"./HeaderTitle/HeaderTitle\";\nimport CloseTest from \"./CloseTest/CloseTest\";\nimport CorrectTest from \"./CorrectTest/CorrectTest\";\nimport CorrectStatusBar from \"./correctStatusBar/CorrectStatusBar\";\nimport axios from \"axios\";\n\nfunction QuizMain() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [appStates, setAppState] = useState({\n    appState: []\n  });\n  const [numberQuestions, setNumberQuestion] = useState(0);\n  const [answerList, setAnswerlist] = useState([]);\n  const [checked, setChecked] = useState(false);\n  const [truAnswer, setTruAnswer] = useState(true);\n  const [timer, setTimer] = useState(true);\n  const [count, setCount] = useState(5);\n  const [score, setScore] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const [closeTest, setClosetest] = useState(false);\n  const [pus, setPush] = useState({\n    Test: \"ok\"\n  });\n  console.log(pus);\n  useEffect(() => {\n    if (timer === false) {\n      const startTimer = setInterval(() => {\n        setCount(val => val - 1);\n      }, 1000);\n\n      if (count === 0) {\n        if (answerList.result === false) {\n          setAnswerlist(answerList.result = \"FALSE\");\n        }\n\n        setChecked(false);\n        setTimer(true);\n        clearInterval(startTimer);\n        setReverse(!reverse);\n      }\n\n      return () => clearInterval(startTimer);\n    }\n  }, [count, timer]);\n  useEffect(() => {\n    fetch(\"https://cors-anywhere.herokuapp.com/https://portal-employee-service.herokuapp.com/interview\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setAppState({\n        appState: result\n      });\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  const questions = appStates.appState.filter((question, i) => {\n    if (i === numberQuestions) {\n      return question;\n    }\n  });\n  const answer = questions.map(ans => ans.listAnswerDto);\n\n  function nextQuestion() {\n    setChecked(false);\n    setNumberQuestion(numberQuestions + 1);\n    setTruAnswer(true);\n  }\n\n  console.log(reverse);\n\n  function selectAnswer(answer, e) {\n    setChecked(true);\n    setAnswerlist(answer);\n\n    if (answer.result === \"FALSE\") {\n      setCount(5);\n      setTimer(false);\n      answer.result = false;\n    }\n\n    if (answer.result === \"TRUE\") {\n      answer.result = true;\n    }\n\n    if (answer.result === true) {\n      setTruAnswer(false);\n      setScore(score + 1);\n    }\n\n    if (answer.result === \"carrent\") {\n      answer.result = true;\n      setTruAnswer(false);\n      setScore(score + 1);\n    }\n\n    if (answer.result === false) {\n      e.map(currentAnswer => {\n        if (currentAnswer.result === \"TRUE\") {\n          currentAnswer.result = \"carrent\";\n        }\n      });\n    }\n  }\n\n  function backToQuestion() {\n    setCount(0);\n  }\n\n  function Close() {\n    setClosetest(true);\n  }\n\n  function ProcessedTest() {\n    setClosetest(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeaderTitle, {\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), score === 3 ? /*#__PURE__*/_jsxDEV(CorrectStatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StatusBar, {\n      numberQuestions: numberQuestions,\n      count: count,\n      timer: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(QuestionTitle, {\n      questions: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Answer, {\n      answers: answer,\n      selectAnswer: selectAnswer,\n      checked: checked,\n      reverse: reverse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextQuestion, {\n      nextQuestion: nextQuestion,\n      truAnswer: truAnswer,\n      BackToQuestion: true,\n      checked: checked,\n      backToQuestion: backToQuestion,\n      timer: timer,\n      Close: Close\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), closeTest ? /*#__PURE__*/_jsxDEV(CloseTest, {\n      ProcessedTest: ProcessedTest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 20\n    }, this) : \"\", score === 3 ? /*#__PURE__*/_jsxDEV(CorrectTest, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 22\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizMain, \"KAZDEEoaExjXSHcULhekEmcsBc8=\");\n\n_c = QuizMain;\nexport default QuizMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizMain\");","map":{"version":3,"sources":["/home/yauheni/Рабочий стол/n/quiz_carrent/src/Components/Quiz/QuizMain.js"],"names":["React","useState","useEffect","QuestionTitle","Answer","NextQuestion","Header","StatusBar","HeaderTitle","CloseTest","CorrectTest","CorrectStatusBar","axios","QuizMain","error","setError","isLoaded","setIsLoaded","appStates","setAppState","appState","numberQuestions","setNumberQuestion","answerList","setAnswerlist","checked","setChecked","truAnswer","setTruAnswer","timer","setTimer","count","setCount","score","setScore","reverse","setReverse","closeTest","setClosetest","pus","setPush","Test","console","log","startTimer","setInterval","val","result","clearInterval","fetch","then","res","json","questions","filter","question","i","answer","map","ans","listAnswerDto","nextQuestion","selectAnswer","e","currentAnswer","backToQuestion","Close","ProcessedTest"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport QuestionTitle from \"./QuestionTitle/QuestionTitle\";\nimport Answer from \"./Answer/Answer\";\nimport NextQuestion from \"./ButtonContainer/ButtonContainer\";\nimport Header from \"./Header/Header\";\nimport StatusBar from \"./StatusBar/StatusBar\";\nimport HeaderTitle from \"./HeaderTitle/HeaderTitle\";\nimport CloseTest from \"./CloseTest/CloseTest\";\nimport CorrectTest from \"./CorrectTest/CorrectTest\";\nimport CorrectStatusBar from \"./correctStatusBar/CorrectStatusBar\";\nimport axios from \"axios\";\n\nfunction QuizMain() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [appStates, setAppState] = useState({ appState: [] });\n  const [numberQuestions, setNumberQuestion] = useState(0);\n  const [answerList, setAnswerlist] = useState([]);\n  const [checked, setChecked] = useState(false);\n  const [truAnswer, setTruAnswer] = useState(true);\n  const [timer, setTimer] = useState(true);\n  const [count, setCount] = useState(5);\n  const [score, setScore] = useState(0);\n  const [reverse, setReverse] = useState(false);\n  const [closeTest, setClosetest] = useState(false);\n\n  const [pus, setPush] = useState({\n    Test: \"ok\",\n  });\n  console.log(pus);\n  useEffect(() => {\n    if (timer === false) {\n      const startTimer = setInterval(() => {\n        setCount((val) => val - 1);\n      }, 1000);\n      if (count === 0) {\n        if (answerList.result === false) {\n          setAnswerlist((answerList.result = \"FALSE\"));\n        }\n\n        setChecked(false);\n        setTimer(true);\n        clearInterval(startTimer);\n        setReverse(!reverse);\n      }\n      return () => clearInterval(startTimer);\n    }\n  }, [count, timer]);\n\n  useEffect(() => {\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/https://portal-employee-service.herokuapp.com/interview\"\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setAppState({ appState: result });\n        },\n\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  const questions = appStates.appState.filter((question, i) => {\n    if (i === numberQuestions) {\n      return question;\n    }\n  });\n  const answer = questions.map((ans) => ans.listAnswerDto);\n\n  function nextQuestion() {\n    setChecked(false);\n    setNumberQuestion(numberQuestions + 1);\n    setTruAnswer(true);\n  }\n  console.log(reverse);\n  function selectAnswer(answer, e) {\n    setChecked(true);\n\n    setAnswerlist(answer);\n\n    if (answer.result === \"FALSE\") {\n      setCount(5);\n      setTimer(false);\n      answer.result = false;\n    }\n\n    if (answer.result === \"TRUE\") {\n      answer.result = true;\n    }\n    if (answer.result === true) {\n      setTruAnswer(false);\n      setScore(score + 1);\n    }\n    if (answer.result === \"carrent\") {\n      answer.result = true;\n      setTruAnswer(false);\n      setScore(score + 1);\n    }\n    if (answer.result === false) {\n      e.map((currentAnswer) => {\n        if (currentAnswer.result === \"TRUE\") {\n          currentAnswer.result = \"carrent\";\n        }\n      });\n    }\n  }\n  function backToQuestion() {\n    setCount(0);\n  }\n\n  function Close() {\n    setClosetest(true);\n  }\n  function ProcessedTest() {\n    setClosetest(false);\n  }\n\n  return (\n    <div>\n      <Header />\n      <HeaderTitle timer={timer} />\n      {score === 3 ? (\n        <CorrectStatusBar />\n      ) : (\n        <StatusBar\n          numberQuestions={numberQuestions}\n          count={count}\n          timer={timer}\n        />\n      )}\n\n      <QuestionTitle questions={questions} />\n      <Answer\n        answers={answer}\n        selectAnswer={selectAnswer}\n        checked={checked}\n        reverse={reverse}\n      />\n      <NextQuestion\n        nextQuestion={nextQuestion}\n        truAnswer={truAnswer}\n        BackToQuestion\n        checked={checked}\n        backToQuestion={backToQuestion}\n        timer={timer}\n        Close={Close}\n      />\n\n      {closeTest ? <CloseTest ProcessedTest={ProcessedTest} /> : \"\"}\n      {score === 3 ? <CorrectTest /> : \"\"}\n    </div>\n  );\n}\n\nexport default QuizMain;\n"]},"metadata":{},"sourceType":"module"}